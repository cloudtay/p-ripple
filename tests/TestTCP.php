<?php

namespace Tests;

use Worker\Map\RpcServices;
use Worker\Socket\TCPConnection;
use Worker\Worker;

class TestTCP extends Worker
{
    /**
     * @param TCPConnection $client
     * @return void
     */
    public function onConnect(TCPConnection $client): void
    {
        $client->send("my pid:" . posix_getpid() . PHP_EOL);
        parent::onConnect($client); // TODO: Change the autogenerated stub
    }

    /**
     * @param string        $context
     * @param TCPConnection $client
     * @return void
     */
    public function onMessage(string $context, TCPConnection $client): void
    {
        if ($context === "fork\n") {
            $client->send("you fork\n");
            $this->fork();
        } elseif ($context === "call\n") {
            var_dump(RpcServices::$jsonRpcServices[TestWs::class]->call('sendMessageToClients', 'test rpc'));
        } else {
            $client->send("you say: {$context}, my pid:" . posix_getpid() . PHP_EOL);
        }
        parent::onMessage($context, $client); // TODO: Change the autogenerated stub
    }
}
